.. _Developer_Guide:

#########################################
WeatherForecast Developer Guide
#########################################

The WeatherForecast CSC downloads forecast information from the Meteoblue forecast service API.
It will publish an updated forecast model every 12 hours or twice a day.
The service uses URL parameters to configure the call to the API

* latitude - the latitude of the forecast model
* longitude - the longitude of the forecast model
* apikey - the API key that authenticates with the service

The API returns a JSON formated file which is then objectfied into a dictionary of dictionaries of arrays.
Each field is then published as telemetry to the WeatherForecast DDS telemetry.

.. _Dependencies:

Dependencies
============

* `SAL <https://ts-sal.lsst.io>`_ - v7.0.1
* `ts_salobj <https://ts-salobj.lsst.io>`_ - v7.2.0

.. Linking to the previous versions may also be worthwhile, depending on the CSC

.. _API:

WeatherForecast API
=============================

The content in this section is autogenerated from docstrings.

.. The code below should insert the docstrings from the code.

.. automodapi:: lsst.ts.weatherforecast
    :no-main-docstr:
    :no-inheritance-diagram:


.. _Build:

Build and Test
==============

Assuming use of the develop-env docker container.

.. prompt:: bash

    setup -kr .
    scons --clean
    scons

.. prompt:: bash

    pip install -e .
    pytest -ra .


.. _Usage:

Usage
=====

In order to run the CSC, the METEOBLUE_API_KEY environment variable needs to be set.

.. _Simulator:

Simulator
=========

No simulator is written nor provided.
There is a forecast-test.json file that serves as data for the unit tests.


.. _Firmware:

Updating Firmware of the WeatherForecast
==================================================

There is no firmware associated with this software but is technically beholden to the Meteoblue API format.


.. _Documentation:

Building the Documentation
==========================

Assuming use of the develop-env container and package installed already.

.. prompt:: bash

    package-docs build

.. _Contributing:

Contributing
============

Code and documentation contributions utilize pull-requests on github.
Feature requests can be made by filing a Jira ticket with the `ts_weatherforecast` label.
In all cases, reaching out to the :ref:`contacts for this CSC <ts_xml:index:csc-table:WeatherForecast>` is recommended.

